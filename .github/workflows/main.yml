name: healthy-ui

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - develop
jobs:  
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'

      - name: Install dependencies
        run: yarn install

      - name: Build the app
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-app-build
          path: build
  push_to_registry:
    needs: build
    name: Build and push Docker image
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ibilic1/healthy-ui
          tags: |
            type=ref,event=branch,pattern=main,enable=true,tag=main
            type=ref,event=branch,pattern=develop,enable=true,tag=develop
      - name: Set Backend Environment Variable
        id: backend_env
        run: |
          set -e  # Exit on first error
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "BACKEND=backend_test" >> $GITHUB_ENV
          else
            echo "BACKEND=${{ secrets.BACKEND }}" >> $GITHUB_ENV
          fi
      - name: Debug Backend Environment Variable
        run: echo "BACKEND=${{ env.BACKEND }}"
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BACKEND=${{ env.BACKEND }}

  openshift_main:
    needs: push_to_registry
    name: Deploy to OpenShift (main)
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SECRET }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
      - run: chmod +x "${GITHUB_WORKSPACE}/.github/workflows/script.sh"
      - run: |
          "${GITHUB_WORKSPACE}/.github/workflows/script.sh" ${{ secrets.APP_NAME }} ${{ secrets.IMAGE_REGISTRY }} ${{ secrets.OPENSHIFT_NAMESPACE }}

  openshift_develop:
    needs: push_to_registry
    name: Deploy to OpenShift (develop)
    runs-on: ubuntu-latest
    environment: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SECRET }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
      - run: chmod +x "${GITHUB_WORKSPACE}/.github/workflows/script.sh"
      - run: |
          "${GITHUB_WORKSPACE}/.github/workflows/script.sh" ${{ secrets.APP_NAME }} ${{ secrets.IMAGE_REGISTRY }} ${{ secrets.OPENSHIFT_NAMESPACE }}
